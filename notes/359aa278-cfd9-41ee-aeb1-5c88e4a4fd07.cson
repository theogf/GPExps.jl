createdAt: "2018-12-07T19:24:19.639Z"
updatedAt: "2018-12-18T12:50:17.846Z"
type: "MARKDOWN_NOTE"
folder: "7cf5bf1951a47a87611d"
title: "Experiment Framework"
content: '''
  # Experiment Framework
  
  ## Abstract representation of the process
  
  ### Input : 
  - Collection of models
    - Varying the type of model (OMGP vs GPFlow) => File to create the model, some `init.jl`
      - Need a clearer definition of the model type (modele object and model name?)
    - Varying the parameters => Create a config file for all needed parameters `config.json`
  
  - Type of experiment
    - What is done ? => Create a file that deal with the training `train.jl`
      - Takes a model and a collection of parameters
    - What is collected ? => All results with labels
      - Can be in form of metrics vs time or final results
  - Data
    - Same for all data
    - Should be in the form of a path
      - Stored in a HDF5 format
      - Allow a preprocessing toolbox to presplit and process the data and store it this way
  - Workspace
    - :heavy_check_mark: Allocate a new workspace containing the source files for every new project
    - :heavy_check_mark: Containing all files and src
    - Create automatic template files
  
  ### Process
  - Preprocess the data
    - Eventually normalize it => Generic
    - Divide it into training/test / $k$-fold => Generic
  - Initialize the models
    - Need special care for each model => Dealt in `init.jl`
  - Set training procedure 
    - Training and callback function =>Dealt in `train.jl`
    - Try to pass any collecting function as a callback function
    - Make the target models as general as possible
    - Catch errors for training and keep training other methods!
  - Correctly retransform collected data into the same format (Dataframes)
  
  ### Outputs
  
  - Dataframe  containing all the data, with labels of each column
  - Store it in a new file everytime
  
  ## Full process
  
  - Write a template config file for the model
  - Process the data just once (make a process for this)! And add a flag in the data to indicate it is processed and if it is already splitted into training/test
  - Make copies of template config file and edit it
  - Send config file to workspace and let the program run
  
  
  ## Link of project :  [GitHub - theogf/GPExps.jl](https://github.com/theogf/GPExps.jl)
  
'''
tags: []
isStarred: false
isTrashed: false
